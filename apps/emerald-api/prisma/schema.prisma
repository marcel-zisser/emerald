generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid      String @id @default(uuid()) @db.Uuid
  firstName String @db.VarChar(50)
  lastName  String @db.VarChar(50)
  username  String @unique @db.VarChar(50)
  role      String @db.VarChar(20)
  email     String @unique @db.VarChar(100)
  password  String @db.VarChar(100)

  checklists Checklist[]
  reviews    Review[]
}

model Criterion {
  uuid        String        @id @default(uuid()) @db.Uuid
  description String        @db.Text
  type        String        @db.VarChar(8) @default("Binary")
  group       CriteriaGroup @relation(fields: [groupId], references: [uuid])
  groupId     String        @db.Uuid

  reviewResults ReviewResult[]
}

model CriteriaGroup {
  uuid        String      @id @default(uuid()) @db.Uuid
  title       String      @db.VarChar(128)
  description String      @db.Text
  criteria    Criterion[]
  checklist   Checklist   @relation(fields: [checklistId], references: [uuid])
  checklistId String      @db.Uuid
}

model Checklist {
  uuid        String          @id @default(uuid()) @db.Uuid
  title       String          @db.VarChar(128)
  description String          @db.Text
  createdAt   DateTime        @default(now())
  groups      CriteriaGroup[]

  owner   User   @relation(fields: [ownerId], references: [uuid])
  ownerId String @db.Uuid

  reviews Review[]
}

model Review {
  uuid       String   @id @default(uuid()) @db.Uuid
  assignedAt DateTime @default(now())

  userId      String    @db.Uuid
  checklistId String    @db.Uuid
  User        User      @relation(fields: [userId], references: [uuid])
  CheckList   Checklist @relation(fields: [checklistId], references: [uuid])

  reviewResults ReviewResult[]

  @@unique([userId, checklistId])
}

model ReviewResult {
  reviewId    String    @default(uuid()) @db.Uuid
  criterionId String    @db.Uuid
  Review      Review    @relation(fields: [reviewId], references: [uuid])
  Criterion   Criterion @relation(fields: [criterionId], references: [uuid])

  status   String @default("TBD") @db.VarChar(16)
  comments String @default("") @db.Text

  @@id([reviewId, criterionId])
}
